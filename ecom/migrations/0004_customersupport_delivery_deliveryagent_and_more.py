# Generated by Django 5.0.1 on 2025-06-02 04:32

import django.db.models.deletion
import ecom.utils
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ecom', '0003_society_remove_customer_address_services_society_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerSupport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('customer_name', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('support_type', models.CharField(blank=True, choices=[('query', 'QUERY'), ('issue', 'ISSUE'), ('feedback', 'FEEDBACK')], max_length=20, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('open', 'OPEN'), ('in_progress', 'IN_PROGRESS'), ('resolved', 'RESOLVED'), ('closed', 'CLOSED')], default=ecom.utils.SupportStatusEnum['OPEN'], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('order_id', models.CharField(max_length=100, unique=True)),
                ('customer_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.BigIntegerField(blank=True, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('delivery_time_slot', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('preparing', 'PREPARING'), ('shipped', 'SHIPPED'), ('out_for_delivery', 'OUT_FOR_DELIVERY'), ('delivered', 'DELIVERED'), ('undelivered', 'UNDELIVERED'), ('returned', 'RETURNED'), ('cancelled', 'CANCELLED')], default='pending', max_length=30, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('payment_status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('paid', 'PAID'), ('cod', 'COD'), ('failed', 'FAILED'), ('refunded', 'REFUNDED'), ('partially_refunded', 'PARTIALLY_REFUNDED')], default='pending', max_length=30, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('is_delivered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('current_location_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('current_location_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LiveOrderTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('order_id', models.UUIDField()),
                ('lat', models.DecimalField(decimal_places=6, max_digits=9)),
                ('lng', models.DecimalField(decimal_places=6, max_digits=9)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('eta', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PincodeServiceability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('pincode', models.CharField(max_length=10)),
                ('warehouse_id', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('delivery_charges', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('eta_minutes', models.PositiveIntegerField(help_text='Estimated time of arrival in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReturnSystem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('return_type', models.CharField(blank=True, choices=[('refund', 'REFUND'), ('exchange', 'EXCHANGE')], max_length=20, null=True)),
                ('return_reason', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('approved', 'APPROVED'), ('rejected', 'REJECTED'), ('completed', 'COMPLETED'), ('cancelled', 'CANCELLED')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.RenameField(
            model_name='category',
            old_name='pic',
            new_name='image',
        ),
        migrations.RemoveField(
            model_name='coupon',
            name='category',
        ),
        migrations.RemoveField(
            model_name='coupon',
            name='customer',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='address',
        ),
        migrations.RemoveField(
            model_name='product',
            name='gst',
        ),
        migrations.RemoveField(
            model_name='product',
            name='stock',
        ),
        migrations.AddField(
            model_name='address',
            name='address_type',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_address', to='ecom.customer'),
        ),
        migrations.AddField(
            model_name='address',
            name='house_floor_no',
            field=models.CharField(blank=True, max_length=101, null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='is_default',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='address',
            name='pincode',
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='state',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='address',
            name='vendors',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_address', to='ecom.vendors'),
        ),
        migrations.AddField(
            model_name='category',
            name='coupon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_coupon', to='ecom.coupon'),
        ),
        migrations.AddField(
            model_name='category',
            name='details',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='category',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='coupon',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendors_coupon', to='ecom.vendors'),
        ),
        migrations.AddField(
            model_name='customer',
            name='coupon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_coupon', to='ecom.coupon'),
        ),
        migrations.AddField(
            model_name='customer',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='customers/profile/'),
        ),
        migrations.AddField(
            model_name='ledger',
            name='reference_id',
            field=models.CharField(blank=True, help_text='Reference ID from payment gateway or other sources.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='ledger',
            name='transaction_type',
            field=models.CharField(choices=[('Payment Received', 'PAYMENT'), ('Refund Issued', 'REFUND'), ('Adjustment', 'ADJUSTMENT'), ('Charge', 'CHARGE')], default='pending', max_length=50),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='services',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='services',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='services/'),
        ),
        migrations.AddField(
            model_name='vendors',
            name='description',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='vendors',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vendors',
            name='license',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='vendors',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='vendor_logos/'),
        ),
        migrations.AddField(
            model_name='vendors',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vendors',
            name='pincode',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='vendors',
            name='rating',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=4),
        ),
        migrations.AddField(
            model_name='vendors',
            name='store_type',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='vendors',
            name='total_orders',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='address',
            name='block_no',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='address',
            name='house_flat_no',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='address',
            name='landmark',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='contactform',
            name='mobile',
            field=models.CharField(max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='discount_type',
            field=models.CharField(blank=True, choices=[('fixed', 'Fixed'), ('percentage', 'Percentage'), ('firstorder', 'FirstOrder'), ('categorydiscount', 'CategoryDiscount'), ('referraldiscount', 'ReferralDiscount')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='alternate_phone_number',
            field=models.CharField(blank=True, max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='order_type',
            field=models.CharField(blank=True, choices=[('pre_placed', 'PREPLACED'), ('instant', 'Instant'), ('instantorder', 'InstantOrder')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='discount',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='services',
            name='name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=30, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=15, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details', to='ecom.vendors')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('Coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_carts', to='ecom.coupon')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to='ecom.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to='ecom.product')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='deliveryagent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deliveryagent_address', to='ecom.deliveryagent'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('stock', models.IntegerField(default=0)),
                ('current_stock', models.PositiveIntegerField(default=0)),
                ('low_stock_threshold', models.IntegerField(default=10)),
                ('is_available', models.BooleanField(default=True)),
                ('batch_no', models.CharField(blank=True, max_length=100, null=True)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('manufacture_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('warehouse_location', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='ecom.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCoins',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('coins', models.PositiveIntegerField(default=0, help_text='Coins/points earned on purchasing this product')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coin_rewards', to='ecom.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='variants/')),
                ('attributes', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='ecom.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart_total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='ecom.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='ecom.product')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecom.vendors')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cart_items', to='ecom.productvariant')),
            ],
        ),
        migrations.AddField(
            model_name='productimage',
            name='productvariant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='productvariant_images', to='ecom.productvariant'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveIntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='ecom.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='ecom.product')),
                ('vendors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='ecom.vendors')),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_code', models.CharField(max_length=20, unique=True)),
                ('reward_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referral', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_by', to='ecom.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='ecom.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='ecom.product')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='subcategory/images')),
                ('is_active', models.BooleanField(default=True)),
                ('highlight', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='ecom.category')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategory_products', to='ecom.subcategory'),
        ),
        migrations.CreateModel(
            name='VendorProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('stock', models.IntegerField(default=0)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('vendor_sku', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_vendor', to='ecom.product')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendors_detail', to='ecom.vendors')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_Product_Price',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gst', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('mrp', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors_product', to='ecom.vendorproduct')),
            ],
        ),
        migrations.CreateModel(
            name='VoiceOrderRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audio_url', models.URLField(help_text='URL to the uploaded voice recording')),
                ('transcription', models.TextField(blank=True, null=True)),
                ('detected_intent', models.CharField(blank=True, max_length=100, null=True)),
                ('products_requested', models.JSONField(blank=True, help_text='Parsed products from voice input', null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('ai_model_version', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'PENDING'), ('processing', 'PROCESSING'), ('completed', 'COMPLETED'), ('failed', 'FAILED')], default='pending', max_length=20)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voice_orders', to='ecom.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to='ecom.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('SUCCESS', 'SUCCESS'), ('FAILED', 'FAILED'), ('REFUNDED', 'REFUNDED'), ('CANCELLED', 'CANCELLED')], default='PENDING', max_length=20)),
                ('method', models.CharField(choices=[('CARD', 'CARD'), ('UPI', 'UPI'), ('NETBANKING', 'NETBANKING'), ('COD', 'COD'), ('WALLET', 'WALLET'), ('OTHER', 'OTHER')], default='CARD', max_length=20)),
                ('payment_gateway', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('gateway_response', models.JSONField(blank=True, null=True)),
                ('is_refunded', models.BooleanField(default=False)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='ecom.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='ecom.order')),
                ('wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='ecom.wallet')),
            ],
        ),
    ]
